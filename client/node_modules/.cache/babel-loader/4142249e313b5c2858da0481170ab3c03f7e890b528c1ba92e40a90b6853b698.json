{"ast":null,"code":"export const validateEmail = email => {\n  const regex = /^[\\w-\\.]+@klh\\.edu\\.in$/;\n  return regex.test(email);\n};\nexport const validateItemForm = data => {\n  const errors = {};\n  if (!data.title || data.title.trim().length < 3) {\n    errors.title = 'Title must be at least 3 characters';\n  }\n  if (!data.description || data.description.trim().length < 10) {\n    errors.description = 'Description must be at least 10 characters';\n  }\n  if (!data.category) {\n    errors.category = 'Category is required';\n  }\n  if (!data.location || data.location.trim().length === 0) {\n    errors.location = 'Location is required';\n  }\n  if (!data.date) {\n    errors.date = 'Date is required';\n  }\n  if (!data.type) {\n    errors.type = 'Type is required';\n  }\n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n};\nexport const validateClaimForm = data => {\n  const errors = {};\n  if (!data.description || data.description.trim().length < 10) {\n    errors.description = 'Description must be at least 10 characters';\n  }\n  return {\n    isValid: Object.keys(errors).length === 0,\n    errors\n  };\n};\nexport const validateFileSize = (file, maxSizeMB = 5) => {\n  const maxSize = maxSizeMB * 1024 * 1024; // Convert to bytes\n  return file.size <= maxSize;\n};\nexport const validateFileType = file => {\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\n  return allowedTypes.includes(file.type);\n};","map":{"version":3,"names":["validateEmail","email","regex","test","validateItemForm","data","errors","title","trim","length","description","category","location","date","type","isValid","Object","keys","validateClaimForm","validateFileSize","file","maxSizeMB","maxSize","size","validateFileType","allowedTypes","includes"],"sources":["C:/Users/Dell/Desktop/klh-lost-and-found/client/src/utils/validators.js"],"sourcesContent":["export const validateEmail = (email) => {\r\n  const regex = /^[\\w-\\.]+@klh\\.edu\\.in$/;\r\n  return regex.test(email);\r\n};\r\n\r\nexport const validateItemForm = (data) => {\r\n  const errors = {};\r\n\r\n  if (!data.title || data.title.trim().length < 3) {\r\n    errors.title = 'Title must be at least 3 characters';\r\n  }\r\n\r\n  if (!data.description || data.description.trim().length < 10) {\r\n    errors.description = 'Description must be at least 10 characters';\r\n  }\r\n\r\n  if (!data.category) {\r\n    errors.category = 'Category is required';\r\n  }\r\n\r\n  if (!data.location || data.location.trim().length === 0) {\r\n    errors.location = 'Location is required';\r\n  }\r\n\r\n  if (!data.date) {\r\n    errors.date = 'Date is required';\r\n  }\r\n\r\n  if (!data.type) {\r\n    errors.type = 'Type is required';\r\n  }\r\n\r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\nexport const validateClaimForm = (data) => {\r\n  const errors = {};\r\n\r\n  if (!data.description || data.description.trim().length < 10) {\r\n    errors.description = 'Description must be at least 10 characters';\r\n  }\r\n\r\n  return {\r\n    isValid: Object.keys(errors).length === 0,\r\n    errors\r\n  };\r\n};\r\n\r\nexport const validateFileSize = (file, maxSizeMB = 5) => {\r\n  const maxSize = maxSizeMB * 1024 * 1024; // Convert to bytes\r\n  return file.size <= maxSize;\r\n};\r\n\r\nexport const validateFileType = (file) => {\r\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp'];\r\n  return allowedTypes.includes(file.type);\r\n};"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAIC,KAAK,IAAK;EACtC,MAAMC,KAAK,GAAG,yBAAyB;EACvC,OAAOA,KAAK,CAACC,IAAI,CAACF,KAAK,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAIC,IAAI,IAAK;EACxC,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAI,CAACD,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACE,KAAK,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,EAAE;IAC/CH,MAAM,CAACC,KAAK,GAAG,qCAAqC;EACtD;EAEA,IAAI,CAACF,IAAI,CAACK,WAAW,IAAIL,IAAI,CAACK,WAAW,CAACF,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,EAAE,EAAE;IAC5DH,MAAM,CAACI,WAAW,GAAG,4CAA4C;EACnE;EAEA,IAAI,CAACL,IAAI,CAACM,QAAQ,EAAE;IAClBL,MAAM,CAACK,QAAQ,GAAG,sBAAsB;EAC1C;EAEA,IAAI,CAACN,IAAI,CAACO,QAAQ,IAAIP,IAAI,CAACO,QAAQ,CAACJ,IAAI,CAAC,CAAC,CAACC,MAAM,KAAK,CAAC,EAAE;IACvDH,MAAM,CAACM,QAAQ,GAAG,sBAAsB;EAC1C;EAEA,IAAI,CAACP,IAAI,CAACQ,IAAI,EAAE;IACdP,MAAM,CAACO,IAAI,GAAG,kBAAkB;EAClC;EAEA,IAAI,CAACR,IAAI,CAACS,IAAI,EAAE;IACdR,MAAM,CAACQ,IAAI,GAAG,kBAAkB;EAClC;EAEA,OAAO;IACLC,OAAO,EAAEC,MAAM,CAACC,IAAI,CAACX,MAAM,CAAC,CAACG,MAAM,KAAK,CAAC;IACzCH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMY,iBAAiB,GAAIb,IAAI,IAAK;EACzC,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,IAAI,CAACD,IAAI,CAACK,WAAW,IAAIL,IAAI,CAACK,WAAW,CAACF,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,EAAE,EAAE;IAC5DH,MAAM,CAACI,WAAW,GAAG,4CAA4C;EACnE;EAEA,OAAO;IACLK,OAAO,EAAEC,MAAM,CAACC,IAAI,CAACX,MAAM,CAAC,CAACG,MAAM,KAAK,CAAC;IACzCH;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAMa,gBAAgB,GAAGA,CAACC,IAAI,EAAEC,SAAS,GAAG,CAAC,KAAK;EACvD,MAAMC,OAAO,GAAGD,SAAS,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC;EACzC,OAAOD,IAAI,CAACG,IAAI,IAAID,OAAO;AAC7B,CAAC;AAED,OAAO,MAAME,gBAAgB,GAAIJ,IAAI,IAAK;EACxC,MAAMK,YAAY,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,WAAW,EAAE,YAAY,CAAC;EAC3E,OAAOA,YAAY,CAACC,QAAQ,CAACN,IAAI,CAACN,IAAI,CAAC;AACzC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}